name: Tests

on: [push, pull_request]

jobs:
  test_som:
    runs-on: ubuntu-20.04 # ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: AST Interpreter PyPy2
            id:   ast
            interp: AST
            python-version: pypy2
          - name: Basics Python 2.7
            python-version: 2.7
            id: basic
          - name: Basics Python 3.8
            python-version: 3.8
            id: basic

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Set up PyPy
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Download PyPy Sources
        if: matrix.id != 'basic'
        run: |
          curl https://downloads.python.org/pypy/pypy2.7-v7.3.1-src.tar.bz2 -o pypy.tar.bz2
          tar -xjf pypy.tar.bz2
          mv pypy2.7-v7.3.1-src .pypy

      - name: Install PyTest
        run: |
           pip install pytest

      - name: Tests
        if: matrix.id == 'basic'
        run: |
          export PYTHON=python
          export PYTHONPATH=src
          pytest
          ./som.sh -cp Smalltalk TestSuite/TestHarness.som

      - name: Full Tests
        if: matrix.id != 'basic'
        run: |
          export SOM_INTERP=${{ matrix.interp }}
          PYTHONPATH=$PYTHONPATH:.pypy:src pytest
          PYTHONPATH=$PYTHONPATH:.pypy ./som.sh -cp Smalltalk TestSuite/TestHarness.som
          PYTHONPATH=$PYTHONPATH:.pypy .pypy/rpython/bin/rpython --batch src/main_rpython.py
          ./som-${{ matrix.id }}-interp -cp Smalltalk TestSuite/TestHarness.som

      - name: SomSom Tests
        if: matrix.id != 'basic'
        run: |
          ./som-${{ matrix.id }}-interp -cp core-lib/Smalltalk:core-lib/TestSuite:core-lib/SomSom/src/compiler:core-lib/SomSom/src/vm:core-lib/SomSom/src/vmobjects:core-lib/SomSom/src/interpreter:core-lib/SomSom/src/primitives \
            core-lib/SomSom/tests/SomSomTests.som

      - name: Install and Run Black
        run: |
          pip install black
          black --check --diff src tests
        if: matrix.python-version == '3.8'

      - name: Install and Run PyLint
        run: |
          pip install pylint
          pylint --init-hook="import sys; sys.setrecursionlimit(2000)" src tests
        if: matrix.python-version == '3.8'


concurrency:
  group: "workflow = ${{ github.workflow }}, ref = ${{ github.event.ref }}, pr = ${{ github.event.pull_request.id }}"
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}
